version: '3'
networks:
  zookeeper-tier:
    driver: bridge

  kafka-tier:
    driver: bridge

  db_tier:
    driver: bridge

  det-rpc-tier:
    driver: bridge

  emb-rpc-tier:
    driver: bridge


services:
  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    volumes:
      - ./storage/zookeeper:/bitnami/zookeeper
    ports:
      - '2181:2181'

    environment:
      - ZOO_SERVER_ID=1
      - ZOO_LOG_LEVEL=WARN
      - ALLOW_ANONYMOUS_LOGIN=yes

    networks:
      - zookeeper-tier
    
  kafka:
    image: 'bitnami/kafka:3.7'
    volumes:
      - ./storage/kafka:/bitnami/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9094,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LOG4J_ROOT_LOGLEVEL=ERROR

    networks:
      - zookeeper-tier
      - kafka-tier
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_NAME=postgres
    volumes:
      - ./storage/db:/var/lib/postgresql/data
    
    ports:
      - "5432:5432"

    networks:
      - db_tier

  app:
    build:
      dockerfile: Dockerfile
      context: ./services/app

    entrypoint: ["/app/wait-for", "postgres:5432", "kafka:9092", "--","/app/start.sh"]

    ports:
      - "8080:8080"

    environment:
      - DEBUG=false
      - PORT=8080
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable
      - MEDIA_DIR=/app/media
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092

    volumes:
      - ./storage/media:/app/media

    networks:
      - kafka-tier
      - db_tier

    depends_on:
      - postgres
      - kafka

  detection:
    build:
      dockerfile: Dockerfile
      context: ./services/source

    networks:
      - det-rpc-tier
    ports:
      - "50052:50052"
    volumes:
      - ./models/detection:/home/app/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  embedding:
    build:
      dockerfile: Dockerfile
      context: ./services/data_processing

    networks:
      - emb-rpc-tier
    ports:
      - "50053:50053"
    volumes:
      - ./models/data_processing:/home/app/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]


  enrollment:
    build:
      dockerfile: Dockerfile
      context: ./services/enrollment

    environment:
      - DET_RPC_HOST=detection:50052
      - EM_RPC_HOST=embedding:50053
      - KAFKA_HOST= kafka:9092
      - MEDIA_ROOT=/home/app/media
    networks: 
      - emb-rpc-tier
      - det-rpc-tier
      - kafka-tier

    depends_on:
      - kafka
      - detection
      - embedding

    volumes:
      - ./storage/media:/home/app/media

      
